version: '3.9'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ptmrpostgres
    ports:
      - "5432:5432"
    volumes:
      - data-volume:/var/lib/postgresql/data
    networks:
      - elastic
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - elastic
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    networks:
      - elastic

  userservice:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - GH_TOKEN=${GH_TOKEN}
    environment:
      - SERVICE=UserService
      - ES_SOURCE=http://elasticsearch:9200
      - DB_SOURCE=postgresql://postgres:password@postgres:5432/ptmrpostgres?sslmode=disable
      - REDIS_ADDRESS=redis:6379
      - CONFIG_PATH=/app/UserService/
      - GIN_MODE=release
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    entrypoint:
      [
        "/app/wait-for.sh",
        "postgres:5432",
        "redis:6379",
        "elasticsearch:9200",
        "--",
        "/app/start.sh"
      ]
    networks:
      - elastic

  applicationservice:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - GH_TOKEN=${GH_TOKEN}
    environment:
      - SERVICE=ApplicationService
      - ES_SOURCE=http://elasticsearch:9200
      - DB_SOURCE=postgresql://postgres:password@postgres:5432/ptmrpostgres?sslmode=disable
      - REDIS_ADDRESS=redis:6379
      - CONFIG_PATH=/app/ApplicationService/
      - GIN_MODE=release
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    entrypoint:
      [
        "/app/wait-for.sh",
        "postgres:5432",
        "redis:6379",
        "elasticsearch:9200",
        "--",
        "/app/start.sh"
      ]
    networks:
      - elastic
  jobwriter:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - GH_TOKEN=${GH_TOKEN}
    environment:
      - SERVICE=JobWriter
      - ES_SOURCE=http://elasticsearch:9200
      - CONFIG_PATH=/app/ApplicationService/
      - GIN_MODE=release
    ports:
      - "8083:8083"
    depends_on:
      - elasticsearch
    entrypoint:
      [
        "/app/wait-for.sh",
        "elasticsearch:9200",
        "--",
        "/app/start.sh"
      ]
    networks:
      - elastic
  matchingservice:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - GH_TOKEN=${GH_TOKEN}
    environment:
      - SERVICE=MatchingService
      - ES_SOURCE=http://elasticsearch:9200
      - CONFIG_PATH=/app/MatchingService/
      - GIN_MODE=release
    ports:
      - "8082:8082"
    depends_on:
      - elasticsearch
    entrypoint:
      [
        "/app/wait-for.sh",
        "elasticsearch:9200",
        "--",
        "/app/start.sh"
      ]
    networks:
      - elastic

networks:
  elastic:
    driver: bridge

volumes:
  data-volume :
